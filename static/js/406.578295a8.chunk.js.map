{"version":3,"file":"static/js/406.578295a8.chunk.js","mappings":"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","sources":["pages/Contacts/Contacts.styled.js","../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Conteiner = styled.div`\n  width: 400px;\n  margin: 0 auto;\n  text-align: center;\n`;\nexport const Title = styled.div`\n  font-size:60px;\n  padding-bottom:30px;\n`;\nexport const ContactTitle = styled.div`\n  font-size:30px;\n  padding-top:30px;\n  padding-bottom:10px;\n`;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 20px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 350px;\n  margin: 0 auto;\n  margin-top: 5px;\n  padding: 10px;\n  border-radius: 10px;\n  background: gold;\n`;\n\nexport const Button = styled.button`\n  font-size: 16px;\n  font-weight: 600;\n  padding: 15px 10px;\n  border-radius: 10px;\n  outline: none;\n  background: gold;\n`;","export const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n\n\n\n","// import PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport { Label, Input, Button } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const name = event.target.elements.name.value;\n    const number = event.target.elements.number.value;\n    const searchContact = contacts.find(contact => contact.name === name);\n    if (searchContact) {\n      alert(`Contact ${name} already in list!`);\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name,\n        number,\n        id: nanoid(),\n      })\n    );\n    event.target.reset();\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\"> Add contact </Button>\n    </form>\n  );\n};\n\n// ContactForm.propTypes = {\n//   addContact: PropTypes.func.isRequired,\n// };\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 20px;\n  font-size: 18px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 350px;\n  margin: 0 auto;\n  margin-top: 5px;\n  padding: 10px;\n  border-radius: 10px;\n  background: gold;\n  \n`;","// import PropTypes from 'prop-types';\nimport { Label, Input } from './Filter.styled';\nimport { filterContact } from 'redux/filter/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <Label>\n      Find Contacts\n      <Input\n        type=\"text\"\n        onChange={e => dispatch(filterContact(e.target.value))}\n      />\n    </Label>\n  );\n};\n\n// Filter.propTypes = {\n//   filterContact: PropTypes.func.isRequired,\n// };\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 400px;\n  list-style: none;\n  padding: 20px 0;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin: 0 auto;\n  \n  \n\n`;\n\nexport const Button = styled.button`\n  display: block;\n  font-size: 20px;\n  font-weight: 700;\n  padding: 5px 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  outline: none;\n  background: silver;\n`;\nexport const Item = styled.li`\n  padding: 10px 10px;\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  background: gold;\n  border-radius: 10px;\n  justify-content: space-between;\n`;","// import PropTypes from 'prop-types';\nimport { List, Button, Item } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  const normalizeValue = value => value.toLowerCase().trim();\n  const selectContacts = contacts.filter(contact =>\n    normalizeValue(contact.name).includes(normalizeValue(filter))\n  );\n  return (\n    <List>\n      {selectContacts.map(({ name, number, id }) => (\n        <Item key={id}>\n          <div>\n            {name}:{number}\n          </div>\n          <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\n// ContactList.propTypes = {\n//   list: PropTypes.arrayOf(PropTypes.number.isRequired).isRequired,\n//   onLeaveFeedback: PropTypes.func.isRequired,\n// };\n// ContactList.propTypes = {\n//   filterContacts: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       name: PropTypes.string.isRequired,\n//       number: PropTypes.string.isRequired,\n//       id: PropTypes.string.isRequired,\n//     }).isRequired\n//   ).isRequired,\n//   removeContact: PropTypes.func.isRequired,\n// };\n\nexport default ContactList;\n","import { Conteiner, Title, ContactTitle } from './Contacts.styled';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport Loader from 'components/Loader/Loader';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getIsLoading, getError, getContacts } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Conteiner>\n      <Title>Phonebook</Title>\n      <ContactForm />\n      {isLoading && <Loader />}\n      {!isLoading && contacts.length > 0 && (\n        <>\n          <ContactTitle>Contacts</ContactTitle>\n          <Filter />\n\n          <ContactList />\n        </>\n      )}\n      {error && <p>{error}</p>}\n    </Conteiner>\n  );\n};"],"names":["Conteiner","styled","Title","ContactTitle","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","Label","Input","Button","getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","name","target","elements","value","number","find","contact","alert","addContact","reset","type","pattern","title","required","onChange","e","filterContact","List","Item","filter","normalizeValue","toLowerCase","trim","selectContacts","includes","map","onClick","deleteContact","Contacts","useEffect","fetchContacts","Loader","length"],"sourceRoot":""}